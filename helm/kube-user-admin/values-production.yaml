# Production values for kube-user-admin
# Copy this file and adjust for your production environment

# Image settings
image:
  repository: renatoruis/kube-user-admin
  tag: "latest"  # Use specific version in production, e.g., "v1.0.0"
  pullPolicy: IfNotPresent

# Backend configuration
backend:
  replicaCount: 2  # Multiple replicas for high availability
  
  # IMPORTANT: Change these values for production
  env:
    ADMIN_PASSWORD: "change-me-in-production"
    JWT_SECRET: "your-super-secret-jwt-key-here"
    DEFAULT_NAMESPACE: "kube-user-admin"
    NODE_ENV: production
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Frontend configuration
frontend:
  replicaCount: 2  # Multiple replicas for high availability
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

# Ingress configuration for external access
ingress:
  enabled: true
  className: "nginx"  # Adjust for your ingress controller
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: kube-admin.yourdomain.com  # CHANGE THIS
      paths:
        - path: /()(.*)
          pathType: Prefix
          service: frontend
        - path: /(api)(.*)
          pathType: Prefix
          service: backend
  tls:
    - secretName: kube-admin-tls
      hosts:
        - kube-admin.yourdomain.com  # CHANGE THIS

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Security context
backend:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false  # Backend needs to write temp files
    capabilities:
      drop:
      - ALL
  podSecurityContext:
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

frontend:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
      - ALL
  podSecurityContext:
    fsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

# Node selection (optional)
nodeSelector: {}
  # kubernetes.io/arch: amd64
  # node-type: worker

# Tolerations (optional)
tolerations: []

# Affinity (optional)
affinity: {}
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 100
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: app.kubernetes.io/name
  #           operator: In
  #           values:
  #           - kube-user-admin
  #       topologyKey: kubernetes.io/hostname 